server {
    listen 80;
    server_name localhost;  # 请替换为您的实际域名
    root /var/www/cuhkstudy/public;
    index index.html index.htm;

    # 启用 gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # 设置R2 CDN变量
    set $r2_endpoint "https://447991a9c9d7dad31c67040315d483b2.r2.cloudflarestorage.com/cuhkstudy";

    # 大文件优先从R2加载 (PDF > 1MB)
    location ~* \.pdf$ {
        # 先尝试R2，失败才本地
        try_files @r2_direct $uri =404;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # 大图片文件优先从R2加载 (> 1MB)
    location ~* \.(png|jpg|jpeg)$ {
        # 检查文件大小，大文件走R2
        set $file_size 0;
        if (-f $request_filename) {
            set $file_size $content_length;
        }
        
        # 尝试本地，如果是大文件或不存在则走R2
        try_files $uri @r2_direct;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header X-Served-From "local";
    }

    # 基础字体文件本地加载 (Inter字体)
    location ~* \.(woff|woff2|ttf)$ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Served-From "local";
    }

    # PDF.js已删除，无需特殊配置

    # 直接从R2获取文件
    location @r2_direct {
        # 构建R2 URL - 移除/static前缀
        set $r2_path $uri;
        if ($uri ~ ^/static/(.*)$) {
            set $r2_path /static/$1;
        }
        
        # 代理到R2
        proxy_pass $r2_endpoint$r2_path;
        proxy_set_header Host 447991a9c9d7dad31c67040315d483b2.r2.cloudflarestorage.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # 缓存R2响应
        proxy_cache_valid 200 30d;
        proxy_cache_valid 404 1m;
        
        # 添加标记头
        add_header X-Served-From "r2-cdn";
        add_header Cache-Control "public, immutable";
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 404 = @not_found;
    }

    # 404处理
    location @not_found {
        return 404;
    }

    # 主要位置配置 - HTML/小文件本地优先
    location / {
        try_files $uri $uri/ =404;
        
        # 添加安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; img-src 'self' data: https://447991a9c9d7dad31c67040315d483b2.r2.cloudflarestorage.com; font-src 'self' https://447991a9c9d7dad31c67040315d483b2.r2.cloudflarestorage.com" always;
    }

    # CSS/JS文件 - 本地优先，通常较小
    location ~* \.(css|js)$ {
        try_files $uri =404;
        expires 7d;
        add_header Cache-Control "public";
        access_log off;
    }

    # 小图标和SVG - 本地
    location ~* \.(svg|ico|gif)$ {
        try_files $uri =404;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # 静态资源路径重写
    location /static/ {
        # 移除static前缀，直接映射到R2
        rewrite ^/static/(.*)$ /$1 break;
        proxy_pass $r2_endpoint;
        proxy_set_header Host 447991a9c9d7dad31c67040315d483b2.r2.cloudflarestorage.com;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Served-From "r2-static";
    }

    # API接口测试R2连接
    location /api/r2-status {
        access_log off;
        return 200 '{"status":"ok","endpoint":"$r2_endpoint","optimized":true,"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # Markdown编辑器代理
    location /editor {
        proxy_pass http://127.0.0.1:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
    }

    # 编辑器API代理
    # Markdown编辑器API代理
    location /api/files {
        proxy_pass http://127.0.0.1:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
    }
    
    location /api/read/ {
        proxy_pass http://127.0.0.1:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
    }
    
    location /api/save/ {
        proxy_pass http://127.0.0.1:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
    }
    
    # 阅读统计API代理
    location /api/track {
        proxy_pass http://127.0.0.1:8889;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
    }
    
    location /api/stats {
        proxy_pass http://127.0.0.1:8889;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
    }
    
    location /api/popular {
        proxy_pass http://127.0.0.1:8889;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
    }

    # 语言重定向配置
    location = / {
        set $lang "zh-cn";
        if ($http_accept_language ~* "zh-TW|zh-Hant") {
            set $lang "zh-tw";
        }
        return 301 /$lang/;
    }

    # 禁止访问隐藏文件和备份文件
    location ~ /\.|~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 日志配置
    access_log /var/log/nginx/cuhkstudy_access.log;
    error_log /var/log/nginx/cuhkstudy_error.log;
}